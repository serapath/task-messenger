module.exports = [require, ana_js]

async function ana_js (node) { // ANA.js

  document.body.innerHTML = '<h1>ana-test</h1>'
  // document.body.innerHTML = localStorage.ana
  document.body.style = 'background: skyblue;'


  // const args_ana = [{ name: 'ana', pk: `6789ana`, sk: `9876oiuy` }]
  // const args_bob = [{ name: 'bob', pk: `1234bob`, sk: `4321fdsa` }]
  // void ANA_js({ args: args_ana  }) // ANA.js
  // .then(o => BOB_js({ args: args_bob.concat(o) })) // BOB.js
  const args_ana = [{ name: 'ana', pk: `6789ana`, sk: `9876oiuy` }]
  // --------------------------------------
  // SETUP
  const { io, db, state, require, config: args } = node
  // const TM = require('tm')
  const [opts] = args_ana || args
  // const tm = await TM(opts)
  db.on((book_id, data) => {
    console.log('from book', book_id, opts.name, 'received msg', data)
   })
  // CONNECT
  const on = { connect, on_rx, on_join }
  io.on(port => {
    console.log('[ANA:IO]:connecting', port)
    port.onmessage = ({ data: msg }) => on[msg.type](msg, port)
  })
  // --------------------------------------
  ana()
  return state.id
  function ana (c = 0) {
    console.log('%cHere: ', 'color: red;', window)
    const clearTimeout = window.clearTimeout
    // const id = setInterval(() => {
    //   console.log('ana', localStorage.ana = c--)
    // }, 1000)
    const B = document.createElement('button')
    B.onclick = () => clearTimeout(id)
    B.textContent = 'stop ana'
    document.body.append(B)
  }
  // --------------------------------------
  async function connect ({ head, data }, port) {
    state.net[head.from] = port
    state[`${state.id}-${head.from}`] = db({ name: `${state.id}-${head.from}` })
    state[`${head.from}-${state.id}`] = db({ name: `${head.from}-${state.id}`, key: data })
    state.net[head.from].postMessage({ head: {from: state.id, to: head.from}, type: 'connect', data: state[`${state.id}-${head.from}`].key })
    setTimeout(() => on_tx({ head: {from: state.id, to: head.from}, type: 'on_rx', data: 'Hello'}), 200)
  }
  async function on_rx ({ head, data }){
    const msg = await state[`${head.from}-${state.id}`].get(data)
    console.log('Log from ana: ', msg)
    print()
   }
  async function on_tx (msg){
    const { head } = msg
    state[`${state.id}-${head.to}`].add(msg)
  }
  async function on_join (id){
    tm.on_join(id)
  }
  function print () {
    const keys = Object.keys(localStorage);

    // Iterate over the keys and retrieve corresponding values
    const allLocalStorage = {};
    keys.forEach(key => {
      allLocalStorage[key] = JSON.parse(localStorage[key])
    });
    console.log(allLocalStorage)
  }
}